/*--------------------------------------------------------------*/
/*  Main resources for VNCview GS                               */
/*--------------------------------------------------------------*/

#include "types.rez"

/*- Constants --------------------------------------------------*/

#define appleMenu     		1
#define fileMenu      		2
#define editMenu      		3
#define editUndo      		250
#define editCut       		251
#define editCopy      		252
#define editPaste     		253
#define editClear     		254
#define editSendClipboard	262
#define editShowClipboard	261
#define fileNewConnection       260
#define fileClose     		255
#define fileQuit      		256
#define appleAbout    		257

#define noKB			100

#define noMarinettiError	2001
#define outOfMemoryError	2002

#define disconnectTCPIPAlert	2003
#define connectionFailedAlert	2004
#define noCryptoError		2005
#define authFailedError		2006
#define authTooManyError	2007
#define badRFBVersionAlert	2008
#define badAuthTypeAlert	2009
#define screenTooBigError	2010
#define noTCPIPConnectionError	2011
#define badGetIpidError		2012
#define badOptionNegotiationError	2013
#define badHandshakingError	2014
#define badReadTCPError		2015

#define linedColors   		1

#define NCWindow		1000	/* Offset for "New Connection" 	*/
					/* window and its controls	*/

#define VNCWindow		3000

#define winNewConnection	1
#define btnConnect		1
#define btnCancel		2
#define linServer		3
#define txtServer		4
#define txtServerInfo		5
#define txtPassword		6
#define linPassword		7
#define txtDisplay		8
#define rectDisplay		9
#define txtColor		10
#define txtGray			11
#define rad320			12
#define rad640			13
#define chkShared		16
#define chkClipboard		17
#define txtTransfers		23
#define chkEmul3Btn		18
#define chkViewOnly		19
#define txtPreferredEncoding	24
#define radRaw			25
#define radHextile		26

/*- Tools ------------------------------------------------------*/

resource rToolStartup(1) {
   mode640,
   {
       3, $0302,                        /* Misc Tool */
       4, $0307,                        /* QuickDraw II */
       5, $0304,                        /* Desk Manager */
       6, $0301,                        /* Event Manager */
/*     8, $0303,                        /* Sound Tools */
      11, $0300,                        /* Integer Math Tool Set */
      14, $0303,                        /* Window Manager */
      15, $0303,                        /* Menu Manager */
      16, $0303,                        /* Control Manager */
      18, $0304,                        /* QuickDraw II Auxiliary */
/*    19, $0301,                        /* Print Manager */
      20, $0303,                        /* LineEdit Tool Set */
      21, $0304,                        /* Dialog Manager */
      22, $0301,                        /* Scrap Manager */
/*    23, $0303,                        /* SFO */
/*    25, $0104,                        /* Note Synthesizer */
      27, $0303,                        /* Font Manager */
      28, $0303,                        /* List Manager */
/*    34, $0103                         /* TextEdit Tool Set */
      }
   };

/*- Menu Bar ---------------------------------------------------*/

resource rMenuBar (1) {                 /* the menu bar */
   {
      appleMenu,                        /* resource numbers for the menus */
      fileMenu,
      editMenu
      };
   };

resource rMenu (appleMenu) {            /* the Apple menu */
   appleMenu,                           /* menu ID */
   refIsResource*menuTitleRefShift      /* flags */
      + refIsResource*itemRefShift
      + fAllowCache,
   appleMenu,                           /* menu title resource ID */
   {appleAbout};                        /* menu item resource IDs */
   };

resource rMenu (fileMenu) {             /* the File menu */
   fileMenu,                            /* menu ID */
   refIsResource*menuTitleRefShift      /* flags */
      + refIsResource*itemRefShift
      + fAllowCache,
   fileMenu,                            /* menu title resource ID */
   {                                    /* menu item resource IDs */
       fileNewConnection,
       fileClose,
       fileQuit
       };
   };

resource rMenu (editMenu) {             /* the Edit menu */
   editMenu,                            /* menu ID */
   refIsResource*menuTitleRefShift      /* flags */
      + refIsResource*itemRefShift
      + fAllowCache,
   editMenu,                            /* menu title resource ID */
   {                                    /* menu item resource IDs */
      editUndo,
      editCut,
      editCopy,
      editPaste,
      editClear,
      editShowClipboard,
      editSendClipBoard
      };
   };

resource rMenuItem (editUndo) {         /* Undo menu item */
   editUndo,                            /* menu item ID */
   "Z","z",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift      /* flags */
      + fDivider,
   editUndo                             /* menu item title resource ID */
   };

resource rMenuItem (editCut) {          /* Cut menu item */
   editCut,                             /* menu item ID */
   "X","x",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   editCut                              /* menu item title resource ID */
   };

resource rMenuItem (editCopy) {         /* Copy menu item */
   editCopy,                            /* menu item ID */
   "C","c",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   editCopy                             /* menu item title resource ID */
   };

resource rMenuItem (editPaste) {      /* Paste menu item */
   editPaste,                           /* menu item ID */
   "V","v",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   editPaste                            /* menu item title resource ID */
   };

resource rMenuItem (editClear) {        /* Clear menu item */
   editClear,                           /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift      /* flags */
      + fDivider,
   editClear                            /* menu item title resource ID */
   };

resource rMenuItem (editShowClipboard) {
   editShowClipboard,
   "","",
   0,
   refIsResource*itemTitleRefShift,
   editShowClipboard
   };

resource rMenuItem (editSendClipboard) {
   editSendClipboard,
   "","",
   0,
   refIsResource*itemTitleRefShift,
   editSendClipboard
   };

resource rMenuItem (fileNewConnection) {	/* New menu item */
   fileNewConnection,                   /* menu item ID */
   "N","n",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   fileNewConnection                    /* menu item title resource ID */
   };

resource rMenuItem (fileClose) {        /* Close menu item */
   fileClose,                           /* menu item ID */
   "W","w",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift      /* flags */
	+ fDivider,
   fileClose                            /* menu item title resource ID */
   };

resource rMenuItem (fileQuit) {         /* Quit menu item */
   fileQuit,                            /* menu item ID */
   "Q","q",                             /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   fileQuit                             /* menu item title resource ID */
   };

resource rMenuItem (appleAbout) {       /* About menu item */
   appleAbout,                          /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift      /* flags */
      + fDivider,
   appleAbout                           /* menu item title resource ID */
   };

                                        /* the various strings */
resource rPString (appleMenu, noCrossBank)  {"@"};
resource rPString (fileMenu, noCrossBank)   {"  File  "};
resource rPString (editMenu, noCrossBank)   {"  Edit  "};
resource rPString (editUndo, noCrossBank)   {"Undo"};
resource rPString (editCut, noCrossBank)    {"Cut"};
resource rPString (editCopy, noCrossBank)   {"Copy"};
resource rPString (editPaste, noCrossBank)  {"Paste"};
resource rPString (editClear, noCrossBank)  {"Clear"};
resource rPString (editShowClipboard, noCrossBank)
					    {"Show Clipboard"};
resource rPString (editSendClipboard, noCrossBank)
					    {"Send Clipboard"};
resource rPString (fileNewConnection, noCrossBank)
					    {"New Connection..."};
resource rPString (fileClose, noCrossBank)  {"Close"};
resource rPString (fileQuit, noCrossBank)   {"Quit"};
resource rPString (appleAbout, noCrossBank) {"About VNCview GS..."};

/*- Alternative Menu Items without Keyboard Equivalents --------*/

resource rMenuBar (1+noKB) {            /* the menu bar */
   {
      appleMenu,                        /* resource numbers for the menus */
      fileMenu+noKB,
      editMenu+noKB
      };
   };
     
resource rMenu (fileMenu+noKB) {        /* the File menu */
   fileMenu,                            /* menu ID */
   refIsResource*menuTitleRefShift      /* flags */
      + refIsResource*itemRefShift
      + fAllowCache,
   fileMenu,                            /* menu title resource ID */
   {                                    /* menu item resource IDs */
       fileNewConnection+noKB,
       fileClose+noKB,
       fileQuit+noKB
       };
   };

resource rMenu (editMenu+noKB) {        /* the Edit menu */
   editMenu,                            /* menu ID */
   refIsResource*menuTitleRefShift      /* flags */
      + refIsResource*itemRefShift
      + fAllowCache,
   editMenu,                            /* menu title resource ID */
   {                                    /* menu item resource IDs */
      editUndo+noKB,
      editCut+noKB,
      editCopy+noKB,
      editPaste+noKB,
      editClear,
      editShowClipboard,
      editSendClipBoard
      };
   };
           
resource rMenuItem (editUndo+noKB) {    /* Undo menu item */
   editUndo,                            /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift      /* flags */
      + fDivider,
   editUndo                             /* menu item title resource ID */
   };

resource rMenuItem (editCut+noKB) {     /* Cut menu item */
   editCut,                             /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   editCut                              /* menu item title resource ID */
   };

resource rMenuItem (editCopy+noKB) {    /* Copy menu item */
   editCopy,                            /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   editCopy                             /* menu item title resource ID */
   };

resource rMenuItem (editPaste+noKB) {   /* Paste menu item */
   editPaste,                           /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   editPaste                            /* menu item title resource ID */
   };

resource rMenuItem (fileNewConnection+noKB) {	/* New menu item */
   fileNewConnection,                   /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   fileNewConnection                    /* menu item title resource ID */
   };

resource rMenuItem (fileClose+noKB) {   /* Close menu item */
   fileClose,                           /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift      /* flags */
	+ fDivider,
   fileClose                            /* menu item title resource ID */
   };

resource rMenuItem (fileQuit+noKB) {    /* Quit menu item */
   fileQuit,                            /* menu item ID */
   "","",                               /* key equivalents */
   0,                                   /* check character */
   refIsResource*itemTitleRefShift,     /* flags */
   fileQuit                             /* menu item title resource ID */
   };

/*- About Box --------------------------------------------------*/

resource rAlertString (1) {
   "93:"
   "VNCview GS 1.0a2\n"
   "Copyright \$A9 2002\$D12004 by Stephen Heumann\n"
   "\n"
   "This program contains material from the ORCA/C Run-Time Libraries, "
   "Copyright 1987-1996 by Byte Works Inc.  Used with permission.\n"
   ":^#0\$00";
   };

/*- Resources used by Finder, etc. -----------------------------*/

resource rVersion (1) {
	{
	        1,0,0,		/* Version number */
                alpha, 2,     /* Release version */
                },
        verUS,			/* Region code */
        "VNCview GS",		/* Title */
        "Copyright \$A9 2002\$D12004\n"
        "by Stephen Heumann"
        };

resource rBundle (1, preload, nospecialmemory) {
	1,	/* Icon ID */
        1,	/* rBundle ID */
        {	/* OneDoc structure to match the program */
	        {
		        $81,
                        {0},
                        {1},
                        {2}
	                },
                $00000005,
                matchFileType {{$B3}},
                empty {},
                matchFilename {{"VNCview.GS"}},
                empty {},
                empty {},
                empty {},
                empty {},
                empty {},
                empty {},
                empty {},
                empty {},
                empty {}
	        }
        };

resource rIcon (1, preload, nospecialmemory) {
	$8000,
	22,
	24,
	$"000000000000000000000000"
	$"0F8EFF00F0FF00F0F0FFFFF0"
        $"0F45FF0F000F0F00F0FFFFF0"
        $"000000000000000000000000"
        $"0F99FF00FFF0F00FFFFFF0F0"
	$"0F99FF0F0F00F0FFFFFFF030"
        $"0000000000000000000000F0"
        $"0999999999999999999990F0"
        $"099FFFF000F0F00FFF999030"
	$"09FFFFFFFFFFFFFFFFF99030"
        $"09F88FFFFF88F1111FF99030"
        $"09FF88FFF88FF1FFF1F99030"
        $"09FF88FFF88FF1FFF1F99030"
	$"09FFF88F88FFFFFFFFF99030"
        $"09FFF88F88FFFF4444F99030"
        $"09FFFF888FFFF4FFFFF99030"
        $"09FFFF888FFFF4FFFFF99030"
	$"09FFFFF8FFFFFF4444F99030"
        $"09FFFFFFFFFFFFFFFFF990F0"
        $"000000000000000000000000"
        $"0F3FFFFFF33333333333F0F0"
        $"000000000000000000000000",
	$"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
	$"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
	$"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
	$"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
	$"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
	$"FFFFFFFFFFFFFFFFFFFFFFFF"
        $"FFFFFFFFFFFFFFFFFFFFFFFF"
};

resource rIcon (2, preload, nospecialmemory) {
	0x8000,
	8,
	8,
	$"F8F8F11F"
	$"F8F8F1F1"
	$"F8F8F1F1"
	$"F8F8FFFF"
	$"F8F8FF44"
	$"F8F8F4FF"
	$"FF8FF4FF"
	$"FF8FFF44",
	$"0F0F0FF0"
	$"0F0F0F0F" 
	$"0F0F0F0F" 
	$"0F0F0000" 
	$"0F0F00FF" 
	$"0F0F0F00" 
	$"00F00F00" 
	$"00F000FF" 
};
                          

/*- Error handler ----------------------------------------------*/

resource rAlertString (noMarinettiError) {
	"42:"
	"Could not load the Marinetti TCP/IP stack. Please ensure that "
	"you have Marinetti 2.0 or later installed on this computer."
	":^#5\$00";
	};

resource rAlertString (noCryptoError) {
	"42:"
        "Could not load the Crypto tool set.  Please install the crypto "
        "tool set version 1.0 or later to use passwords in VNCview GS."
        ":^#6\$00";
        };

resource rAlertString (outOfMemoryError) {
	"42:"
	"Could not allocate sufficient memory.  Please reduce memory "
	"usage and run VNCview GS again."
	":^#5\$00";
	};

resource rAlertString  (disconnectTCPIPAlert) {
	"20:"
        "Do you want to disconnect your TCP/IP connection?"
        ":^#3:#2\$00";
        };

resource rAlertString (authFailedError) {
	"52:"
        "Authentication failed.  Please re-type your password and try again."
        ":^#6\$00";
        };

resource rAlertString (authTooManyError) {
	"72:"
	"Authentication has failed too many times.  Please check that you are "
        "using the correct password and wait a while before connecting again."
        ":^#6\$00";
        };

resource rAlertString (connectionFailedAlert) {
	"92;"
        "Connection failed:\n"
        "*0"
        ";^#6\$00";
        };

resource rAlertString (badRFBVersionAlert) {
	"42:"
        "The server reported an RFB protocal version incompatible with VNCview "
        "GS or is not an RFB server."
        ":^#6\$00";
        };

resource rAlertString (badAuthTypeAlert) {
	"42:"
        "The connection failed because the server requested an authentication "
        "type not recognized by VNCview GS."
        ":^#6\$00";
        };

resource rAlertString (noTCPIPConnectionError) {
	"32:"
        "A TCP/IP connection could not be established."
        ":^#6\$00";
        };

resource rAlertString (badGetIpidError) {
	"42:"
        "There was an error while resolving the hostname you provided or "
        "preparing to connect to it."
        ":^#6\$00";
        };

resource rAlertString (badOptionNegotiationError) {
	"32:"
        "There was an error while negotiating protocol options."
        ":^#6\$00";
        };

resource rAlertString (badHandshakingError) {
	"32:"
        "There was an error while establishing a VNC connection with the server."
        ":^#6\$00";
        };
                                        
resource rAlertString (screenTooBigError) {
	"72:"
        "The server's framebuffer resolution is too big for VNCview GS.  "
        "VNCview GS does not support resolutions greater than 16,384 by 16,384."
        ":^#6\$00";
        };

#if 0
resource rAlertString (badReadTCPError) {
	"72:"
        "The TCP/IP stack did not return the amount of data expected.  This "
        "may be indicative of a bug in Marinetti or in the VNC server software."
        ":^#6\$00";
        };
#endif

resource rAlertString (10000) {
	"72:"
        "*0"
        ":^#6\$00";
        };

/*- New VNC Connection window resources ----------------------------------*/

resource rWindParam1 (NCWindow+winNewConnection) {
	fTitle+fClose+fFlex+fMove,	/* wFrameBits */
        nil,				/* wTitle */
        0,				/* wRefCon */
        {0,0,0,0},			/* ZoomRect */
        nil,				/* wColor ID */
        {0,0},				/* Origin */
        {0,0},				/* data size */
        {0,0},				/* max height-width */
        {0,0},				/* scroll vertical, horizontal */
        {0,0},				/* page vertical, horizontal */
        0,				/* wInfoRefCon */
        0,				/* wInfoHeight */
        {40,162,181,478},		/* wPosition */
        infront,			/* wPlane */
        NCWindow+winNewConnection,	/* wStorage */
        $0009				/* wInVerb */
        };

resource rControlList (NCWindow+winNewConnection) {{
	        NCWindow+btnConnect,
                NCWindow+btnCancel,
	        NCWindow+linServer,
                NCWindow+txtServer,
                NCWindow+txtServerInfo,
                NCWindow+txtPassword,
                NCWindow+linPassword,
                NCWindow+txtDisplay,
                NCWindow+rectDisplay,
                NCWindow+rad320,
                NCWindow+txtColor,
                NCWindow+rad640,
                NCWindow+txtGray,
                NCWindow+chkShared,
                NCWindow+chkClipboard,
                NCWindow+txtTransfers,
                NCWindow+chkEmul3Btn,
                NCWindow+chkViewOnly,
                NCWindow+txtPreferredEncoding,
                NCWindow+radRaw,
                NCWindow+radHextile,
        }};

resource rControlTemplate (NCWindow+btnConnect) {
	btnConnect,			/* Control ID */
        {121,217,0,0},			/* Control Rect */
        SimpleButtonControl {{
	    	$0001,			/* flags */
            	$3002,			/* more flags */
            	0,				/* refcon */
            	NCWindow+btnConnect,	/* Title Ref */
            	nil,			/* color table ref */
            	{"\$0D","\$0D",0,0}	/* key equivalents (esc) */
            	}};
        };
resource rPString (NCWindow+btnConnect) {"Connect"};
                  
resource rControlTemplate (NCWindow+btnCancel) {
	btnCancel,			/* Control ID */
        {121,128,0,0},			/* Control Rect */
        SimpleButtonControl {{
	        $0000,			/* flags */
                $3002,			/* more flags */
                0,			/* refcon */
                NCWindow+btnCancel,	/* Title Ref */
                nil,			/* color table ref */
                {"\$1B","\$1B",0,0}	/* key equivalents (esc) */
                }};
        };
resource rPString (NCWindow+btnCancel) {"Cancel"};

resource rControlTemplate (NCWindow+linServer) {
	linServer,
        {4,87,16,310},
        editLineControl {{
	        $0000,
                $7000,
                0,			
                255,                    /* Max Size */
                0                       /* text ref */
                }};
        };

resource rControlTemplate (NCWindow+txtServer) {
	txtServer,
	{5,3,15,86},
        statTextControl {{
	        $0004,
                $1002,
                0,
                NCWindow+txtServer	/* Title ref */
	        }};
        };
resource rTextForLETextBox2 (NCWindow+txtServer) {"VNC Server:"};

resource rControlTemplate (NCWindow+txtServerInfo) {
	txtServerInfo,
	{16,0,26,316},
        statTextControl {{
	        $0000,
                $1002,
                0,
                NCWindow+txtServerInfo	/* Title ref */
	        }};
        };
resource rTextForLETextBox2 (NCWindow+txtServerInfo) {
	"\$01J\$01\$00Use \$01S\$03\$00host:display\$01S\$00\$00 "
        "(or \$01S\$03\$00host\$01S\$00\$00 for display 0)."
        };

resource rControlTemplate (NCWindow+txtPassword) {
	txtPassword,
	{29,15,38,86},
        statTextControl {{
	        $0004,
                $1002,
                0,
                NCWindow+txtPassword	/* Title ref */
	        }};
        };
resource rTextForLETextBox2 (NCWindow+txtPassword) {"Password:"};

resource rControlTemplate (NCWindow+linPassword) {
	linPassword,
        {28,87,39,310},
        editLineControl {{
	        $0000,
                $7000,
                0,			
                8,	                /* Max Size */
                0,                      /* text ref */
                $D7			/* password character */
                }};
        };

resource rControlTemplate (NCWindow+txtDisplay) {
	txtDisplay,
	{43,13,52,73},
        statTextControl {{
	        $0000,
                $1002,
                0,
                NCWindow+txtDisplay	/* Title ref */
	        }};
        };
resource rTextForLETextBox2 (NCWindow+txtDisplay) {" Display "};

resource rControlTemplate (NCWindow+rectDisplay) {
	NCWindow+rectDisplay,
	{47,3,100,111},
        rectangleControl {{
	        $FF01,
                $1000,
                0
	        }};
        };

resource rControlTemplate (NCWindow+rad320) {
	rad320,
	{55,10,0,0},
        RadioControl {{
	        $0002,
                $1002,
                0,
                NCWindow+rad320,	/* Title ref */
	        1			/* initial value */
                }};
        };
resource rPString (NCWindow+rad320) {"320 x 200"};

resource rControlTemplate (NCWindow+txtColor) {
	txtColor,
	{64,35,73,90},
        statTextControl {{
	        $000C,
                $1002,
                0,
                NCWindow+txtColor	/* Title ref */
                }};
        };
resource rTextForLETextBox2 (NCWindow+txtColor) {"Color"};

resource rControlTemplate (NCWindow+rad640) {
	rad640,
	{78,10,0,0},
        RadioControl {{
	        $0002,
                $1002,
                0,
                NCWindow+rad640,	/* Title ref */
	        0			/* initial value */
                }};
        };
resource rPString (NCWindow+rad640) {"640 x 200"};

resource rControlTemplate (NCWindow+txtGray) {
	txtGray,
	{87,35,96,109},
        statTextControl {{
	        $000C,
                $1002,
                0,
                NCWindow+txtGray	/* Title ref */
                }};
        };
resource rTextForLETextBox2 (NCWindow+txtGray) {"Grayscale"};

resource rControlTemplate (NCWindow+chkShared) {
	chkShared,
	{43,117,0,0},
        CheckControl {{
	        $0000,
                $1002,
                0,
                NCWindow+chkShared,	/* Title ref */
	        1			/* initial value */
                }};
        };
resource rPString (NCWindow+chkShared) {"Request Shared Session"};

resource rControlTemplate (NCWindow+chkClipboard) {
	chkClipboard,
	{82,117,0,0},
        CheckControl {{
	        $0000,
                $1002,
                0,
                NCWindow+chkClipboard,	/* Title ref */
	        1			/* initial value */
                }};
        };
resource rPString (NCWindow+chkClipboard) {"Allow Clipboard"};

resource rControlTemplate (NCWindow+txtTransfers) {
	txtTransfers,
	{91,144,100,310},
        statTextControl {{
	        $000C,
                $1002,
                0,
                NCWindow+txtTransfers	/* Title ref */
                }};
        };
resource rTextForLETextBox2 (NCWindow+txtTransfers) {"Transfers from Server"};

resource rControlTemplate (NCWindow+chkEmul3Btn) {
	chkEmul3Btn,
	{56,117,0,0},
        CheckControl {{
	        $0000,
                $1002,
                0,
                NCWindow+chkEmul3Btn,	/* Title ref */
	        1			/* initial value */
                }};
        };
resource rPString (NCWindow+chkEmul3Btn) {"Emulate 3-Button Mouse"};

resource rControlTemplate (NCWindow+chkViewOnly) {
	chkViewOnly,
	{69,117,0,0},
        CheckControl {{
	        $0000,
                $1002,
                0,
                NCWindow+chkViewOnly,	/* Title ref */
	        0			/* initial value */
                }};
        };
resource rPString (NCWindow+chkViewOnly) {"View Only Mode"};

resource rControlTemplate (NCWindow+txtPreferredEncoding) {
	txtPreferredEncoding,
	{104,3,91,310},
        statTextControl {{
	        $0004,
                $1002,
                0,
                NCWindow+txtPreferredEncoding	/* Title ref */
	        }};
        };
resource rTextForLETextBox2 (NCWindow+txtPreferredEncoding) {"Preferred Encoding:"};

resource rControlTemplate (NCWindow+radRaw) {
	radRaw,
	{104,155,0,0},
        RadioControl {{
	        $0003,
                $1002,
                0,
                NCWindow+radRaw,	/* Title ref */
	        1			/* initial value */
                }};
        };
resource rPString (NCWindow+radRaw) {"Raw"};

resource rControlTemplate (NCWindow+radHextile) {
	radHextile,
	{104,220,0,0},
        RadioControl {{
	        $0003,
                $1002,
                0,
                NCWindow+radHextile,	/* Title ref */
	        0			/* initial value */
                }};
        };
resource rPString (NCWindow+radHextile) {"Hextile"};


/*- TCP/IP Connection Status window resources ----------------------*/

resource rWindParam1 (1002) {
	fVis + fAlert,			/* wFrameBits */
        nil,				/* wTitle */
        0,				/* wRefCon */
        {0,0,0,0},			/* ZoomRect */
        nil,				/* wColor ID */
        {0,0},				/* Origin */
        {0,0},				/* data size */
        {0,0},				/* max height-width */
        {0,0},				/* scroll vertical, horizontal */
        {0,0},				/* page vertical, horizontal */
        0,				/* wInfoRefCon */
        0,				/* wInfoHeight */
        {85,169,115,471},		/* wPosition */
        infront,			/* wPlane */
        nil,				/* wStorage */
        $0000				/* wInVerb */
        };

resource rPString(10002) {"Press \$11. to cancel."};

/*- VNC Session Window Resources -----------------------------------------*/

/* 640 mode */
resource rWindParam1 (1003) {
	fRScroll + fBScroll + fVis + fCtlTie + fGrow,	/* wFrameBits */
        nil,				/* wTitle */
        0,				/* wRefCon */
        {0,0,0,0},			/* ZoomRect */
        1,				/* wColor ID */
        {0,0},				/* Origin */
        {0,0},				/* data size */
        {0,0},				/* max height-width */
        {8,8},				/* scroll vertical, horizontal */
        {0,608},			/* page vertical, horizontal */
        0,				/* wInfoRefCon */
        0,				/* wInfoHeight */
        {13,1,187,614},			/* wPosition */
        infront,			/* wPlane */
        nil,				/* wStorage */
        $0800				/* wInVerb */
        };

/* 320 mode */
resource rWindParam1 (1004) {
	fRScroll + fBScroll + fVis + fCtlTie + fGrow,	/* wFrameBits */
        nil,				/* wTitle */
        0,				/* wRefCon */
        {0,0,0,0},			/* ZoomRect */
        1,				/* wColor ID */
        {0,0},				/* Origin */
        {0,0},				/* data size */
        {0,0},				/* max height-width */
        {8,8},				/* scroll vertical, horizontal */
        {0,0},				/* page vertical, horizontal */
        0,				/* wInfoRefCon */
        0,				/* wInfoHeight */
        {13,1,187,303},			/* wPosition */
        infront,			/* wPlane */
        nil,				/* wStorage */
        $0800				/* wInVerb */
        };

resource rWindColor (1) {
	0x0000,
        0x0FA0,
        0x020F,
        0xF0AA,
        0x00F0
        };
