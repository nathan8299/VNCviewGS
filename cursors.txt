vncview.cc:        if (cursor) {
vncview.cc:            free(cursor);
vncview.cc:    if (cursor)
vncview.cc:	    free(cursor);
vncview.cc:        InitCursor();					/* Activate pointer cursor */
vncview.cc:	InitCursor();                       /* start the arrow cursor */
mouse.cc:unsigned char * cursor = NULL;	/* Cursor from server */
mouse.cc:/* This routine also maintains the appropriate cursor when using local cursor */
mouse.cc:    	if (cursor && GetCursorAdr() == cursor)
mouse.cc:    if (cursor && GetCursorAdr() != cursor)
mouse.cc:	    SetCursor(cursor);
mouse.cc:    unsigned char *cursorPixels;
mouse.cc:    /* Elements of the cursor structure (which isn't a C struct) */
mouse.cc:    unsigned int *cursorHeightPtr, *cursorWidthPtr;
mouse.cc:    unsigned char *cursorImage, *cursorMask;
mouse.cc:    unsigned char *oldCursor = cursor;	/* So we can free() it later */
mouse.cc:    cursorPixels = (unsigned char *)(*readBufferHndl);
mouse.cc:    cursor = malloc(8 + 4 * lineWords * rectHeight);
mouse.cc:    if (cursor == NULL)
mouse.cc:    cursorHeightPtr = (unsigned int *)(void *)cursor;
mouse.cc:    cursorWidthPtr  = cursorHeightPtr + 1;
mouse.cc:    cursorImage     = cursor + 4;
mouse.cc:    cursorMask      = cursorImage + lineWords * rectHeight * 2;
mouse.cc:    hotSpotYPtr     = (unsigned int *)(cursorMask + lineWords * rectHeight * 2);
mouse.cc:    *cursorHeightPtr = rectHeight;
mouse.cc:    *cursorWidthPtr = lineWords;
mouse.cc:    /* Make cursorImage using translation tables */
mouse.cc:    /* Make cursorMask from bitmask */
mouse.cc:    dataPtr = cursorPixels;
mouse.cc:        maskLine = cursorMask + line * lineWords * 2;
mouse.cc:        imageLine = cursorImage + line * lineWords * 2;
mouse.cc:        maskLine = cursorMask + line * lineWords * 2;
mouse.cc:        imageLine = cursorImage + line * lineWords * 2;
mouse.cc:        j = cursorPixels + rectWidth * (line + 1) - dataPtr;
mouse.cc:    	SetCursor(cursor);
mouse.cc:    for (k = cursor; k < cursorImage; k++)
mouse.cc:	    fprintf(foo, "%02X", *(cursorImage + j));
mouse.cc:    for (k = cursorImage + j; k < cursorImage + j + 4; k = k + 1)
